#LaTeX2HTML Version 96.1 : dot.latex2html-init
#

$HTML_VERSION = "3.2,math";
$NO_SIMPLE_MATH = 1;

$LOCAL_ICONS = 1;     # Makes a copy of the icon directory under
                      # the directory containing the final html docs.

$CUSTOM_TITLES = 1;   # Use custom_title_hook to generate filenames

### Command Line Argument Defaults #######################################

$TOC_DEPTH = 2;         # Sectioning to this level shown in Table-Of-Contents

$TOC_STARS = 0;         # 0 => Don't include starred sections in TOC.

$MAX_SPLIT_DEPTH = 5;	# Stop making separate files at this depth

$MAX_LINK_DEPTH = 2;    # Stop showing child nodes at this depth   

$NOLATEX = 0;           # 1 = do not pass unknown environments to Latex

$EXTERNAL_IMAGES = 0;   # 1 = leave the images outside the document 

$ASCII_MODE = 0;        # 1 = do not use any icons or internal images

# 1 =  use links to external postscript images rather than inlined bitmap
# images.
$PS_IMAGES = 0;

# $TITLE = $default_title;      # The default is "No Title" 
$TITLE = "OOMMF Documentation";      # The default is "No Title" 

$DESTDIR = '';         # Put the result in this directory 

# When this is set, the generated HTML files will be placed in the 
# current directory. If set to 0 the default behaviour is to create (or reuse)
# another file directory.
$NO_SUBDIR = 0;


# Supply your own string if you don't like the default <Name> <Date>
# $ADDRESS = "<I>$address_data[0] <BR>\n$address_data[1]</I>";
$ADDRESS = "<I>OOMMF Documentation Team<BR><A HREF=\"mailto:michael.donahue\@nist.gov\">michael.donahue\@nist.gov</A><BR>\n$address_data[1]</I>";

$NO_NAVIGATION = 0;	# 1 = do not put a navigation panel at the top of each page

# Put navigation links at the top of each  page.  If  the page  exceeds
# $WORDS_IN_PAGE  number of words then put one at the bottom of the page.
$AUTO_NAVIGATION = 1;

# Put a link to the index page in  the  navigation  panel
$INDEX_IN_NAVIGATION = 1;

# Put a link to the table of contents  in  the  navigation  panel
$CONTENTS_IN_NAVIGATION = 1;

# Put a link to the next logical page  in  the  navigation  panel
$NEXT_PAGE_IN_NAVIGATION = 1;

# Put a link to the previous logical page  in  the  navigation  panel
$PREVIOUS_PAGE_IN_NAVIGATION = 1;

$INFO = 1;              # 0 = do not make a "About this document..." section 

# Reuse images generated during previous runs
$REUSE = 2;

# When this is 1, the section numbers are shown. The section numbers should 
# then match those that would have bee produced by LaTeX.
# The correct section numbers are obtained from the $FILE.aux file generated 
# by LaTeX.
# Hiding the section numbers encourages use of particular sections 
# as standalone documents. In this case the cross reference to a section 
# is shown using the default symbol rather than the section number.
$SHOW_SECTION_NUMBERS = 0;

# If NO_FOOTNODE is true, then footnotes are placed at the bottom of the
# HTML page where they occur, rather than on a separate page.
$NO_FOOTNODE = 1;

### Other global variables ###############################################
$CHILDLINE = "<BR> <HR>\n";

# This is the line width measured in pixels and it is used to right justify
# equations and equation arrays; 
$LINE_WIDTH = 500;		

# Used in conjunction with AUTO_NAVIGATION
$WORDS_IN_PAGE = 300;	

# Affects ONLY the way accents are processed 
$default_language = 'english';	

# The value of this variable determines how many words to use in each 
# title that is added to the navigation panel (see below)
# 
$WORDS_IN_NAVIGATION_PANEL_TITLES = 4;

# This number will determine the size of the equations, special characters,
# and anything which will be converted into an inlined image
# *except* "image generating environments" such as "figure", "table" 
# or "minipage".
# Effective values are those greater than 0.
# Sensible values are between 0.1 - 4.
$MATH_SCALE_FACTOR = 1.4;
$DISP_SCALE_FACTOR = 1.2;

# This number will determine the size of 
# image generating environments such as "figure", "table" or "minipage".
# Effective values are those greater than 0.
# Sensible values are between 0.1 - 4.
$FIGURE_SCALE_FACTOR = 1.6;

# Use scalable font in LaTeX image generation.
$SCALABLE_FONTS = 1;

#  If this is set then intermediate files are left for later inspection.
#  This includes $$_images.tex and $$_images.log created during image
#  conversion.
#  Caution: Intermediate files can be *enormous*.
$DEBUG = 0;

#  If both of the following two variables are set then the "Up" button
#  of the navigation panel in the first node/page of a converted document
#  will point to $EXTERNAL_UP_LINK. $EXTERNAL_UP_TITLE should be set
#  to some text which describes this external link.
$EXTERNAL_UP_LINK = "";
$EXTERNAL_UP_TITLE = "";

# If this is set then the resulting HTML will look marginally better if viewed 
# with Netscape.
$NETSCAPE_HTML = 0;

# Valid paper sizes are "letter", "legal", "a4","a3","a2" and "a0"
# Paper sizes has no effect other than in the time it takes to create inlined
# images and in whether large images can be created at all ie
#  - larger paper sizes *MAY* help with large image problems 
#  - smaller paper sizes are quicker to handle
$PAPERSIZE = "letter";

# Replace "english" with another language in order to tell LaTeX2HTML that you 
# want some generated section titles (eg "Table of Contents" or "References")
# to appear in a different language. Currently only "english" and "french"
# is supported but it is very easy to add your own. See the example in the
# file "latex2html.config" 
$TITLES_LANGUAGE = "english";

### Navigation Panel ##########################################################
#
# The navigation panel is constructed out of buttons and section titles.
# These can be configured in any combination with arbitrary text and 
# HTML tags interspersed between them. 
# The buttons available are:
# $PREVIOUS - points to the previous section
# $UP  - points up to the "parent" section
# $NEXT - points to the next section
# $NEXT_GROUP - points to the next "group" section
# $PREVIOUS_GROUP - points to the previous "group" section
# $CONTENTS - points to the contents page if there is one
# $INDEX - points to the index page if there is one
#
# If the corresponding section exists the button will contain an
# active link to that section. If the corresponding section does
# not exist the button will be inactive.
#
# Also for each of the $PREVIOUS $UP $NEXT $NEXT_GROUP and $PREVIOUS_GROUP
# buttons there are equivalent $PREVIOUS_TITLE, $UP_TITLE, etc variables
# which contain the titles of their corresponding sections. 
# Each title is empty if there is no corresponding section.
#
# The subroutine below constructs the navigation panels in each page.
# Feel free to mix and match buttons, titles, your own text, your logos,
# and arbitrary HTML (the "." is the Perl concatenation operator).
sub top_navigation_panel {

    # Now add a few buttons with a space between them
    "$NEXT $UP $PREVIOUS $CONTENTS $INDEX $CUSTOM_BUTTONS" .
    
    "<BR>\n" .		# Line break
	
    # If ``next'' section exists, add its title to the navigation panel
    ($NEXT_TITLE ? "<B> Next:</B> $NEXT_TITLE\n" : undef) . 
    
    # Similarly with the ``up'' title ...
    ($UP_TITLE ? "<B>Up:</B> $UP_TITLE\n" : undef) . 
 
    # ... and the ``previous'' title
    ($PREVIOUS_TITLE ? "<B> Previous:</B> $PREVIOUS_TITLE\n" : undef) .
   
    #  Line Break, horizontal rule (3-d dividing line) and new paragraph  
    "<BR> <P>\n"		
}

sub bot_navigation_panel {

    #  Start with a horizontal rule (3-d dividing line)
    "<HR>".			
    
    # Now add a few buttons with a space between them
    "$NEXT $UP $PREVIOUS $CONTENTS $INDEX $CUSTOM_BUTTONS" .
    
    "<BR>\n" .		# Line break
	
    # If ``next'' section exists, add its title to the navigation panel
    ($NEXT_TITLE ? "<B> Next:</B> $NEXT_TITLE\n" : undef) . 
    
    # Similarly with the ``up'' title ...
    ($UP_TITLE ? "<B>Up:</B> $UP_TITLE\n" : undef) . 
 
    # ... and the ``previous'' title
    ($PREVIOUS_TITLE ? "<B> Previous:</B> $PREVIOUS_TITLE\n" : undef) 
   
}

# Disable transparent images, because mmHelp displays these _real_ slow.
# It should be sufficient to set "WHITE_BACKGROUND," and use
# \htmlimage{no_transparent} on larger images, but LaTeX2HTML Version
# 98.2 beta6 (August 14th, 1998) produces gray backgrounds in that situation.
$TRANSPARENT_FIGURES = 0;
$WHITE_BACKGROUND = 1; # Not actually needed if $TRANSPARENT_FIGURES==0,
## but it shouldn't hurt to set this too.

# Image (i.e., equation) background color.  The preceding stanza
# should set the background to white, but for some reason LaTex2HTML
# release 2002-2-1 (1.70) ignores that request unless LATEX_COLOR is
# set in this file...which it then promptly ignores and sets the
# background to white regardless of the setting of LATEX_COLOR.
# Anyway, this seems to work. (mjd, 15-Jan-2003)
$LATEX_COLOR = "\\pagecolor[gray]{1}";

# LaTeX2HTML 99.2 allows image types selection at
# runtime. Unfortunately, the icon files are defined in the system
# l2hconf.pm file using the value of $IMAGE_TYPE defined there.  So in
# that case the following affects LaTeX generated images, but not the
# icon files.  This discrepancy appears to be fixed in later versions of
# LaTeX2HTML, e.g., 2002-2-1 (1.71).
$IMAGE_TYPE = "gif";

# Interlaced GIF's are generated incorrectly with LaTeX2HTML
# 2002-2-1 (1.71) on Fedora Core 6.  We don't really need them,
# so just disable this.
$INTERLACE = 0;

# On Fedora Core 6 systems (others?), giving dvips the -Ppdf
# option results in bad figure cropping when generating inline
# images.  This hack overrides the settings in prefs.pm.
$DVIPSOPT = ' -Pcmz -Pamz';

# Set contents of INFO for abbreviated \htmlinfo command
$INFO = "This document was generated using the <A HREF=\"$TEX2HTMLADDRESS\"><STRONG>LaTeX</STRONG>2<tt>HTML</tt></A> translator Version $TEX2HTMLVERSION.";

# Use abbreviated index entries
$SHORT_INDEX = 1;


1;	# This must be the last line
